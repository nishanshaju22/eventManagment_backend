info:
  title: Event Management System API
  version: 1.0.0
  description: RESTful API for managing events, users, and RSVPs

servers:
  - url: http://localhost:5000/api

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
        username:
          type: string
        is_admin:
          type: boolean

    Event:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        date:
          type: string
          format: date-time
        location:
          type: string
        category:
          type: string
        max_attendees:
          type: integer

security:
  - bearerAuth: []

paths:
  /auth/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
                role:
                  type: string
                  enum: [user, admin]
      responses:
        '201':
          description: Registered
        '400':
          description: User already exists

  /auth/login:
    post:
      summary: Login and receive JWT
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: JWT token
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'

  /auth/request-password-reset:
    post:
      summary: Request password reset token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
      responses:
        '200':
          description: Reset token sent

  /auth/reset-password:
    post:
      summary: Reset password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reset_token:
                  type: string
                new_password:
                  type: string
      responses:
        '200':
          description: Password updated

  /auth/update-profile:
    put:
      summary: Update user profile
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
      responses:
        '200':
          description: Profile updated

  /auth/me:
    get:
      summary: Get current user's profile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Current user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /events:
    get:
      summary: List all events
      parameters:
        - name: category
          in: query
          schema:
            type: string
        - name: location
          in: query
          schema:
            type: string
        - name: date
          in: query
          schema:
            type: string
            format: date
        - name: page
          in: query
          schema:
            type: integer
        - name: per_page
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: List of events
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
    post:
      summary: Create an event (admin only)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
      responses:
        '201':
          description: Event created

  /events/{event_id}:
    get:
      summary: Get event by ID
      parameters:
        - name: event_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Event details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
    put:
      summary: Update event (admin only)
      security:
        - bearerAuth: []
      parameters:
        - name: event_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
      responses:
        '200':
          description: Event updated
    delete:
      summary: Delete event (admin only)
      security:
        - bearerAuth: []
      parameters:
        - name: event_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Event deleted

  /events/{event_id}/rsvp:
    post:
      summary: RSVP to event
      security:
        - bearerAuth: []
      parameters:
        - name: event_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: RSVP successful